package edu.nuist.ojs.baseinfo.controller;

import com.aliyun.oss.OSSClient;
import com.aliyun.oss.model.OSSObject;
import edu.nuist.ojs.baseinfo.entity.FileService;
import edu.nuist.ojs.baseinfo.entity.Message;
import edu.nuist.ojs.baseinfo.entity.MessageService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.web.bind.annotation.RequestAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.*;
import java.net.URLEncoder;
import java.util.List;
import java.util.zip.Adler32;
import java.util.zip.CheckedOutputStream;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;

@RestController
public class MessageController {
    @Autowired
    MessageService messageService;
    @Autowired
    FileService fileService;
    @Value("${oss.accessKey}")
    private String ossId;
    @Value("${oss.secretKey}")
    private String ossSecret;
    @Value("${oss.region}")
    private String ossRegion;
    @Value("${oss.bucketName}")
    private String ossBucketName;

    @RequestMapping("/message/getPath")
    public String getUrl(@RequestAttribute String key){
        String url = "https://zhiwindrain.oss-cn-shanghai.aliyuncs.com/"+key;
        return url;
    }

    @RequestMapping("/message/recv")
    public List<Message> getRecvMessage(@RequestAttribute long recvId){
        List<Message> messages = messageService.findByRecvId(recvId);
        if (messages.size()>0){
            return messages;
        }
        return null;
    }

    @RequestMapping("/message/save")
    public Message saveMessage(@RequestAttribute Message message){
        return messageService.save(message);
    }
    @RequestMapping("/message/getLocal")
    public String getLocal(@RequestAttribute String random){
        return fileService.findByRandomName(random).getLocalName();
    }
}
