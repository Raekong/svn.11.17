package edu.nuist.ojs.baseinfo.controller;



import java.util.HashMap;
import java.util.Map;
import java.util.Random;

import javax.servlet.http.HttpSession;

import org.hibernate.sql.Update;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import edu.nuist.ojs.baseinfo.entity.Publisher;
import edu.nuist.ojs.baseinfo.entity.PublisherService;
import edu.nuist.ojs.baseinfo.entity.User;
import edu.nuist.ojs.baseinfo.entity.UserService;

@RestController
public class UserController {
    @Autowired
    UserService userService;

    @Autowired
    PublisherService publisherService;

    @RequestMapping("/user/regist")
    public User regist(@RequestAttribute User user){
        User u = userService.checkAndSave( user );
        return u;
    }

    @RequestMapping("/user/isSuper")
    public User isSuper(@RequestAttribute String email){
        return userService.findSuperByEmail(email);
    }

    @RequestMapping("/user/setI18n")
    public User setI18n(@RequestAttribute long uid, @RequestAttribute String lang){
        userService.updateI18n(uid, lang);
        return userService.findByUserId(uid);
    }


    @RequestMapping("/user/login")
    public User login(
            @RequestAttribute String email,
            @RequestAttribute String password,
            @RequestAttribute long publishId){
        return userService.findByPublisherIdAndEmailAndPassword(publishId, email, password);

    }

    @RequestMapping("/user/resetpassword")
    public Map<String,Object> resetPassword(
            @RequestAttribute String email,
            @RequestAttribute String publisherAbbr ){

        Map<String,Object> rst=new HashMap<>();

        long publishId = 0;

        if(publisherAbbr.equals("admin")){
            publishId = -1;
        }else if(publisherService.findByAbbr(publisherAbbr)!=null){
            Publisher publisher = publisherService.findByAbbr(publisherAbbr);
            publishId = publisher.getId();
        }

        if(publishId != 0 ){
            String code="";
            Random rand=new Random();//生成随机数
            for(int a=0;a<6;a++) {
                code += rand.nextInt(10);//生成6位验证码
            }

            userService.updatePassword(publishId, email, code);
            rst.put("flag",true);
            rst.put("code",code);
            return rst;
        }

        rst.put("flag",false);
        return rst;

    }
}
